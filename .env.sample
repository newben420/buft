## --- SERVER ENVIRONMENT SPECIFIC AND SENSITIVE CONFIG
TITLE="Vanta" # [string] Allows naming the bot instance for logs and telegram alerts.
PORT="5000" # [integer] Specifies the port on which the instance run.
PRODUCTION="false" # [boolean] to specify production/development(debug) mode.
PROD_URL="https://example.com" # [boolean] in production mode, this refers to the url of the instance, also used for telegram webhooks.
FLOW_LOG_MAX_PRIORITY="5" # [integer] this is used to filter console flow logs, values can be [0, 10] (filter out higher values) and -2 (show debug logs in production mode). 
EXIT_ON_UNCAUGHT_EXCEPTION="true" # [boolean] specify if process is terminated when an uncaught exception occurs
EXIT_ON_UNHANDLED_REJECTION="false" # [boolean] specify if process is terminated when an unhandled rejection occurs
TG_TOKEN="[redacted]" # [string] # telegram bot token for telegram integration.
TG_CHAT_ID="778401334" # [numeric] # chat id for telegram account that will be used for telegram interaction.
TG_POLLING="true" # [boolean] # to enable either telegram bot polling (preferred when hosted on a local or insecure server) or webhook (when hosted on https).
TG_WH_SECRET_TOKEN="I3UYETCYVRTUsddsBIN" # [string] random string to use as secret to authenticate webhook requests from telegram.
TG_BOT_URL="https://t.me/bot" # [string] telegram bot url
BG_API_KEY="[redacted]" # [string] bitget api key
BG_API_SECRET="[redacted]" # [string] bitget api secret
BG_API_PASSPHRASE="[redacted]" # [string] bitget api passphrase

# IMPORTANT CONFIG (MORE LIKELY TO CHANGE)

## --- TRADE BEHAVIOUR
TR_CAPITAL_RATIO_FOR_TRADE="0.8" # [float, between 0.1 and 1] a ratio value used to specify the ration of capital allocated for the order that would actually be used, allowing room for the rest to be used for fees. recommended value ranges between 0.8 and 0.9.
TR_MARGIN_MODE="crossed" # ["isolated"|"crossed"] trade margin mode
TK_LEVERAGE_LONG="20" # [numeric] leverage for long orders in isolated margin mode.
TK_LEVERAGE_SHORT="20" # [numeric] leverage for short orders in isolated margin mode.
TK_LEVERAGE_CROSS="20" # [numeric] leverage for all orders in crossed margin mode.
TR_GRID_LENGTH="3" # [numeric] the maximum number of concurrent orders. recommended range is [1,10].
TR_MAX_CAPITAL_MCOIN="10" # [numeric] maximum capital in margin coin (lkely USDT) that can be allocated for an order, despite account balance.
TR_POS_UPDATE_INTERVAL_MS="1000" # [integer] millisecond interval at which current positions are updated for actions to be carried out, when applicable. recommended range is [1000, 10000].
TR_STOPLOSS_PERC_RANGE="5 100" # [percentages] upper and lower pnl bounds at which stop losses from technical indicators are adjusted to before an automated order is opened.
TR_MANUAL_STOPLOSS_PERC="50" # [percentage] stop loss pnl percentage for manually placed orders.
TR_MANUAL_TAKEPROFIT_PERC="100" # [percentage] take profit pnl percentage for manually placed orders.
TR_AUTOMATIC_TP_SL_MULTIPLIER="1" # [numeric] for automated orders, the product of the stop loss and the multiplier is used in the opposite direction for take profit.
TR_RECOVERY_DEFULT_SL_PERC="10" # [numeric] stop loss values for recovered positions (positions not opened by current instance but recovered on start up).
TR_AUTO_SELL="10 0 0|45 500 0|-70 60000 150000" # |PNL MIN_ORDER_DURATION_MS MAX_ORDER_DURATION_MS| - 0 IN MAX IS SEEN AS INFINITY => auto sell configurations (limit orders), for closing positions.
TR_PEAK_DROP="5 0 0 0|1 100 -100 0" # |MIN_DROP MAX_DROP MIN_PNL MAX_PNL| - 0 IN MAX IS SEEN AS INFINITY => peak drop configurations (trailing limit orders), for closing positions.
TR_TEMP_ORDERS_MAX_DURATION_MS="300000" # [integer] millisecond duration for temporary orders to expire and be discarded if not created and filled.
### --- Below configurations are for the module (DupSig) that filters out duplicate signals in automated trading (engine/dup_sig.js)
DS_USE="true" # [boolean] to either enable or disable DupSig.
DS_MAX_SIGNS="5" # [numeric] maximum number of previous signals to keep for checking against latest signals.
DS_MAX_DURATION_MS="3600000" # [numeric] millisecond duration after which previous signals kept expire and are no longer effective for DupSig.
### --- Below are configurations for the module (SigSmooth) that delays signals moving against the current trend, in automated trading (engine/sigsmooth.js)
SS_USE="true" # [boolean] to either enable/disable SigSmooth.
SS_LONE_MAX_DURATION_MS="600000" # [numeric] milliseconds duration after which lone signals expire and are discarded if the trend does not change in their favour.

## --- AUTOMATION, SEMANTICS, UX AND FLAGS
TR_AUTO_ENABLED="false" # [boolean] whether to enable/disable automated trading, i.e., immediately executing valid signals. 
TG_SEND_START="true" # [boolean] whether to send telegram alert when bot instance starts running.
TG_SEND_STOP="true" # [boolean] whether to send telegram alert when bot instance stops running.
TG_SEND_CREATE_ORDER="true" # [boolean] whether to send telegram alert when an order is created (not filled).
TG_SEND_AUTO_FAIL="true" # [boolean] whether to send telegram alert when an automated order fails to execute.
BROADCAST="true" # [boolean] to enable/disable the broadcast module (engine/broadcast.js) responsible for ATR limit buys, LLM inference, and sending actual signals as telegram notifications for onward action.

## --- ANALYSIS AND TICKERS
TK_AUTO_SYMBOLS="BTCUSDT" # [strings separated by spaces] tickers automatically added to the ticker module on start, for monitoring and periodic analysis.
TK_MAX="200" # [numeric]  maximum number of concurrent tickers added to ticker module.
TK_GRANULARITY_DEF="1m" # [1m, 3m, 5m, 15m, 30m, 1H, 4H, 6H, 12H, 1D, 3D, 1W, 1M , 6Hutc, 12Hutc, 1Dutc, 3Dutc, 1Wutc, 1Mutc] default granularity for data to be used by indicators, when not specified.
TK_GRANULARITIES="1m 5m 10m" # [like above, spaced, ASC ordered] granularies for candlestick data to be maintained by the instance for analysis.
TK_MAX_ROWS="650" # [numeric] maximum number of candlestick data rows maintained for any stated granularity.
### --- Below are configurations for analysis and various indicator parameters used, consisting of key[string]-value[string|numeric|boolean] pairs.
IN_CFG="MN_DATA_LEN 100 DIR_LEN 5 MX_SIGHIST_LEN 5 COOL_DOWN_MS 60000 COL_MX_FILSIZ 20000 ML_COL_DATA false ML_DATA_PATH test TMC_P 20 PSR_ST 0.02 PSR_MX 0.2 MCD_FSP 12 MCD_SLP 26 MCD_SGP 9 MAP 20 STC_P 14 STC_SP 3 ICH_CVP 9 ICH_BSP 26 ICH_SPP 52 ICH_DIS 26 AOS_FSP 5 AOS_SLP 34 TRX_P 15 ADX_P 14 STC_P 14 STC_SP 3 RSI_P 14 CCI_P 14 MFI_P 14 ATR_P 14 KST_RP1 10 KST_RP2 15 KST_RP3 20 KST_RP4 30 KST_SGP 9 KST_SP1 10 KST_SP2 10 KST_SP3 10 KST_SP4 15"

## --- STRATEGY (7 STEPS TO HEAVEN CONFIGURATION)
### comptuing flags (suffixed _CV) are used to compute a single boolean from boolean outputs of multiple indicators used for that stage.
#### computing flags can either have the value 0, 1, or a float inbetween the two (0,1).
#### if 1, all boolean values must be true for the output to be true (Logical AND)
#### if 0, the output is true if any of the boolean values is true (logical OR)
#### if inbetween (0,1), a ratio of the boolean values greater than or equal to the provided value must be true for the output to be true.  
### optional flags (suffixed _FV) are used to either use or ignore the verdict of that stage. it can either be 0 or 1.
#### if 1, the verdict of that stage is used. e.g., the LONG signal is valid only if the trend is BULLISH from stage 1.
#### if 0, the verdict of that stage is ignored, e.g.. the signal is valid even if weak (stage 3), OR, the SHORT signal is valid even if oversold (stage 4).
STR_ENTRY_IND="TMC_5m" # [ICH|MCD|PSR|TMC => 1 [+++ _granularity e.g. IND_5m]] specifying the indicator+granularity used for entry signals for the strategy, stage 1. 
STR_TREND_IND="BLL_1m SMA EMA WMA MCD VWP AOS TRX KST" # [BLL|SMA|EMA|WMA|MCD|VWP|AOS|TRX|KST => * [+++ _granularity e.g. IND_5m]] specifying indicators+granularites to use for trend confirmation, stage 2.
STR_TREND_CV="0" #  [computing flag] stage 2 / trend confirmation - BULLISH for LONG, BEARISH for SHORT.
STR_TREND_FV="0" # [optional flag] for stage 2.
STR_STG_IND_GRAN="5m" # [granularity] for the candlestick data used by ADX to analyse trend strength in stage 3.
STR_STG_FV="0" # 1|0 [optional flag] for stage 3, to decide whether to use or ignore weak signals.
STR_OB_IND="SRS CCI_5m MFI RSI STC" # [STC|RSI|CCI|MFI|SRS => *] stage 4, specifying indicators+granularites to use for checking reversals in overbought/oversold conditions.
STR_OB_CV="1" # [computing flag] for stage 4.
STR_OB_FV="0" # [optional flag] for stage 4 - whether to ignore OB/OS reversals.
STR_REV_IND_BULL="EST TBC_1H DCC PIL TTP" # [STR|HGM|EST|TBC|PIL|DCC|TTP|ABB|BEP|EDS|GSD|BRH|BRM|BHC => * [+++ _granularity e.g. IND_5m]] stage 5,  specifying indicators+granularites to use for checking reversals in candlestick patterns for LONG signals.
STR_REV_IND_BEAR="MST HMR TBT" # [TWS|MST|HMR|TBT|ABB|BLE|MDS|DFD|BLH|BLM|BLC => * [+++ _granularity e.g. IND_5m]] stage 5,  specifying indicators+granularites to use for checking reversals in candlestick patterns for SHORT signals.
STR_REV_CV="1" # [computing flag] for stage 5.
STR_REV_FV="0" # [optional flag] for stage 5 - whether to ignore candlestick pattern reversals.
STR_TSL_IND="PSR" # [PSR|ICH => 1 [+++ _granularity e.g. IND_5m]] stage 6, specifying the indicator/granularity to be used to compute stop loss and take profit values.
STR_VOL_IND_GRAN="1m" # [grab=nularity] stage 7, to be used by ATR to compute market volatility.
STR_VOL_RNG="0 0" # [percentage ranges] to filter out signas in less/too volatile markets in stage 7.

## --- LLM/GROQ INTEGRATIONS (USED FOR INTEGRATING LLM INTO THE FLOW TO COMPUTE CONFIDENCE SCORE, SUPPORT/REJECT, GIVE VERDICT ON LONG/SHORT TRADING SIGNALS, WITH REASONS)
GROQ_USE="true" # [boolean] Whether to use groq to gain LLM analysis and verdict on trading signals.
GROQ_KEY="gsk_[redacted]" # [string] Groq API key. required for this functionality.
GROQ_ENDPOINT="https://api.groq.com/openai/v1/chat/completions"
GROQ_MODELS="openai/gpt-oss-120b" # [spaced strings] - check models below, confirm availability on groq console as some may be decomissioned at any time.
# allam-2-7b compound-beta compound-beta-mini deepseek-r1-distill-llama-70b gemma2-9b-it 
# llama-3.1-8b-instant llama-3.3-70b-versatile llama3-70b-8192 llama3-8b-8192 
# meta-llama/llama-4-maverick-17b-128e-instruct meta-llama/llama-4-scout-17b-16e-instruct 
# meta-llama/llama-guard-4-12b meta-llama/llama-prompt-guard-2-22m 
# meta-llama/llama-prompt-guard-2-86m mistral-saba-24b qwen-qwq-32b qwen/qwen3-32b
# openai/gpt-oss-120b openai/gpt-oss-20b moonshotai/kimi-k2-instruct moonshotai/kimi-k2-instruct-0905
GROQ_REQUEST_TIMEOUT_MS="0" # [numeric] http timeout in milliseconds for inference request to groq.
GROQ_MAX_RETRIES="4" # [integer] max numbe rof times to retry failed inference requests.
GROQ_HTTP_TIMEOUT_MS="60000" # [numeric] actual http timeout in milliseconds for inference request to groq, preferred.
GROQ_MAX_HISTORY_COUNT="5" # [numeric] max number of previous LLM verdicts per ticker to use as reference to provide additional context in future inferences.

# ADVANCED TRADE CONFIGS
## --- ATR CONFIG (THIS FEATURE WORKS IN THE BROADCAST MODULE TO AUTOMATE EXECUTING SIGNALS AFTER CONFIRMATION, WHEN CERTAIN MARKET CONDITIONS ARE MET)
### It works by either executing the signal immeidately when the ATR volatility is broken, or when a time cycle pattern is detected, while the signal is yet to expire.
ATR_INTERVAL_MS="5000" # [numeric] millisecond interval at which the ATR garbage collector runs to discard expired signals.
ATR_TIMEOUT_MS="3600000" # [numeric] millisecond duration after which a signal expired if not executed by ATR.
ATR_AUTO_ENABLE="1 3 50 0|4 5 50 1" # [|MIN_CONSECUTIVE_OCCURRENCE_OF_SAME_SIGNAL MAX_CONSECUTIVE_OCCURENCE MIN_LLM_CONFIDENCE_SCORE 0_1_BOOL_INDICATING_LLM_SUPPORT_REQUIRE|] conditions for automatically enabling ATR limit order on signals.
ATR_INDS="ATR TCH TCH_5m" # [spaced string] indicators and conditions for executing ATR limit orders.

### --- DAMAGE CONTROL FEATURE (A PART OF THE BROADCAST MODULE, TO CLOSE POSITIONS WHEN MARKET IS NO LONGER MOVING IN THEIR TRENDS)
DC_MAX_LATEST_SIGNALS="7" # [numeric] Max number of latest signals to keep to determine market trend/direction.
DC_MIN_DOM_PERC="80" # [percentage] of latest signals that are long/short to determine whether the market is bullish/bearish/undecisive.
DC_SELL="0 600000 2.4|600001 43200000 -5|43200001 86400000 -10" # [|MIN_DURATION_MS MAX_DURATION_MS MIN_PNL_PERC|] conditions for damage control selling

## --- SIMULATION/PAPER TRADING CONFIG (IN WHICH TRADES ARE EXECUTED IN REAL TIME BUT WITHOUT REAL CASH, THEY ARE SIMULATED, FOR TESTING)
SIM_ENABLED="true" # [boolean] to run instance in simulation/live mode.
SIM_STARTING_BALANCE_MCOIN="50" # [numeric] intial balance of simulation.
SIM_MAX_CONCURRENT_TRADES="5" # [integer] maximum number of concurrent positions in simulation mode. 

## --- STATIC CONFIG (LESS LIKELY TO CHANGE)
TZ="Africa/Lagos" # [string] Specify timezone for the process' date and time features.
FORCE_FAMILY_4="true" # [boolean] to enable/disable use of IPV6 which may break the bot's network functionalities when running under certain ISPs. preferred value is "true".
TK_PRODUCT_TYPE="USDT-FUTURES" # [string] Do not edit this unless necessary.
TK_MARGIN_COIN="USDT" # [string] Do not edit this unless necessary.

## --- COLLECTOR (FOR USE WITH COLLECTOR AND BACKTESTING MODULE [Simulating strategies on past market] (collector.js) to test configured strategy and visualize in external systems)
### The visualization and analysis happens in external local modules not built into this bot. So, please ignore this part, or contact me to set up and external system for back testing.
CL_SYMBOLS="BABYUSDT" 
CL_ROWS="500"
CL_MAX_ROWS_PER_FETCH="200"

## --- FINDER (IGNORE, MODULE I USE TO FIND SUITABLE BITGET TICKERS TO TRADE WITH, BASED ON THEIR CONSTRAINTS)
FI_SAVE_PATH="/home/wraith/Desktop/found.json"